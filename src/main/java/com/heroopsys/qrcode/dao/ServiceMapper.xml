<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.heroopsys.qrcode.dao.ServiceMapper">
	<resultMap id="BaseResultMap" type="com.heroopsys.qrcode.entity.ServiceInfo">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="service_type_id" property="serviceTypeId"
			jdbcType="INTEGER" />
		<result column="device_code" property="deviceCode" jdbcType="VARCHAR" />
		<result column="service_name" property="serviceName" jdbcType="VARCHAR" />
		<result column="service_date" property="serviceDate" jdbcType="TIMESTAMP" />
		<result column="service_location" property="serviceLocation"
			jdbcType="VARCHAR" />
		<result column="service_content" property="serviceContent"
			jdbcType="VARCHAR" />
		<result column="bak" property="bak" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, service_type_id, device_code, service_name, service_date,
		service_location, service_content,
		bak
	</sql>
	<select id="selectByDeviceCode" resultMap="BaseResultMap" parameterType="map">
		select
		<include refid="Base_Column_List" />
		from t_qrcode_service where 1 = 1
		<if test="_parameter!= null">
			and device_code = #{device_code}
		</if>
	</select>

	<select id="selectByExampleAndPager" resultMap="BaseResultMap"
		parameterType="map">
		select
		<if test="example.distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from t_qrcode_service
		<if test="example!= null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="example.orderByClause != null">
			order by ${example.orderByClause}
		</if>
		<if test="page != null">
			limit ${page.offset},${page.rows}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from t_qrcode_service
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from t_qrcode_service
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.heroopsys.qrcode.entity.ServiceInfo">
		insert into t_qrcode_service (id, service_type_id, device_code,
		service_name, service_date, service_location,
		service_content, bak)
		values (#{id,jdbcType=INTEGER}, #{serviceTypeId,jdbcType=INTEGER},
		#{deviceCode,jdbcType=VARCHAR},
		#{serviceName,jdbcType=VARCHAR}, #{serviceDate,jdbcType=TIMESTAMP},
		#{serviceLocation,jdbcType=VARCHAR},
		#{serviceContent,jdbcType=VARCHAR}, #{bak,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.heroopsys.qrcode.entity.ServiceInfo">
		insert into t_qrcode_service
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="serviceTypeId != null">
				service_type_id,
			</if>
			<if test="deviceCode != null">
				device_code,
			</if>
			<if test="serviceName != null">
				service_name,
			</if>
			<if test="serviceDate != null">
				service_date,
			</if>
			<if test="serviceLocation != null">
				service_location,
			</if>
			<if test="serviceContent != null">
				service_content,
			</if>
			<if test="bak != null">
				bak,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="serviceTypeId != null">
				#{serviceTypeId,jdbcType=INTEGER},
			</if>
			<if test="deviceCode != null">
				#{deviceCode,jdbcType=VARCHAR},
			</if>
			<if test="serviceName != null">
				#{serviceName,jdbcType=VARCHAR},
			</if>
			<if test="serviceDate != null">
				#{serviceDate,jdbcType=TIMESTAMP},
			</if>
			<if test="serviceLocation != null">
				#{serviceLocation,jdbcType=VARCHAR},
			</if>
			<if test="serviceContent != null">
				#{serviceContent,jdbcType=VARCHAR},
			</if>
			<if test="bak != null">
				#{bak,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="java.util.Map"
		resultType="java.lang.Integer">
		select count(*) from t_qrcode_service
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByPrimaryKeySelective" parameterType="com.heroopsys.qrcode.entity.ServiceInfo">
		update t_qrcode_service
		<set>
			<if test="serviceTypeId != null">
				service_type_id = #{serviceTypeId,jdbcType=INTEGER},
			</if>
			<if test="deviceCode != null">
				device_code = #{deviceCode,jdbcType=VARCHAR},
			</if>
			<if test="serviceName != null">
				service_name = #{serviceName,jdbcType=VARCHAR},
			</if>
			<if test="serviceDate != null">
				service_date = #{serviceDate,jdbcType=TIMESTAMP},
			</if>
			<if test="serviceLocation != null">
				service_location = #{serviceLocation,jdbcType=VARCHAR},
			</if>
			<if test="serviceContent != null">
				service_content = #{serviceContent,jdbcType=VARCHAR},
			</if>
			<if test="bak != null">
				bak = #{bak,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.heroopsys.qrcode.entity.ServiceInfo">
		update t_qrcode_service
		set service_type_id = #{serviceTypeId,jdbcType=INTEGER},
		device_code = #{deviceCode,jdbcType=VARCHAR},
		service_name = #{serviceName,jdbcType=VARCHAR},
		service_date = #{serviceDate,jdbcType=TIMESTAMP},
		service_location = #{serviceLocation,jdbcType=VARCHAR},
		service_content = #{serviceContent,jdbcType=VARCHAR},
		bak = #{bak,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>